plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
    id 'com.diffplug.spotless' version '6.18.0'
}

group 'ch.unibas.dmi.dbis'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

idea {
    project {
        languageLevel = sourceCompatibility
    }

    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

application {
    mainClass = 'ch.unibas.dmi.dbis.dis.mom.Main'
}

dependencies {
    // JUnit add-ons
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    // AWS SDK
//    implementation 'software.amazon.awssdk:aws-sdk-java:2.20.63'
    implementation 'software.amazon.awssdk:sns:2.20.63'
    implementation 'software.amazon.awssdk:sqs:2.20.63'
    // JSON
    implementation 'com.google.code.gson:gson:2.10.1'
}

test {
    useJUnit()
    useJUnitPlatform()
}

shadowJar {
    zip64 true
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
        endWithNewline()
    }
    java {
        googleJavaFormat()
        // fix formatting of type annotations
        formatAnnotations()
        // trail whitespaces
        trimTrailingWhitespace()
        // make sure every file has the following copyright header.
        // optionally, Spotless can set copyright years by digging
        // through git history (see "license" section below)
        licenseHeader '/* (C)$YEAR */'
    }
}